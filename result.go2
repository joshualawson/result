package result

type Result[type T interface{}, E error] struct {
	isErr bool
	err E
	ok T
}

func (r Result[T, E]) Ok(f func(T)) Result[T, E] {
	if !r.isErr {
		f(r.ok)
	}
	
	return r
}

func (r Result[T, E]) Err(f func(E)) Result[T, E] {
	if r.isErr {
		f(r.err)
	}

	return r
}

func (r Result[T, E]) IsErr() bool {
	return r.isErr
}